using System;

namespace loxsharp
{
    {{#each this as | absClass |}}
    public abstract class {{absClass.AbstractClassName}}
    {

        public interface Visitor<R>
        {
            {{#each absClass.ImplClasses as | implClass |}}
            public R Visit{{implClass.ClassName}}{{absClass.AbstractClassName}}({{implClass.ClassName}} {{absClass.AbstractParam}});
            {{/each}}
        }

        public abstract R Accept<R>(Visitor<R> visitor);

        {{#each absClass.ImplClasses as | implClass |}}
        public class {{implClass.ClassName}} : {{absClass.AbstractClassName}}
        {
            {{#each implClass.Fields as | field | }}
            public readonly {{field.Type}} {{field.Name}};
            {{/each}}

            public {{implClass.ClassName}}({{#each implClass.Fields as | field |}}{{field.Type}} {{field.Name}}{{#unless @last}}, {{/unless}}{{/each}})
            {
                {{#each implClass.Fields as | field |}}
                this.{{field.Name}} = {{field.Name}};
                {{/each}}
            }

            public override R Accept<R>(Visitor<R> visitor) {
                return visitor.Visit{{implClass.ClassName}}{{absClass.AbstractClassName}}(this);
            }
        }
        {{#unless @last}}

        {{/unless}}
        {{/each}}
    }
    {{#unless @last}}

    {{/unless}}
    {{/each}}
}
